name: CI/CD Pipeline for Auction App

on:
  # Trigger workflow on push to Development branch
  push:
    branches:
      - Development

  # Allow manual triggering of workflow for deploying to Production
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'prod'
        type: choice
        options:
          - QA
          - Prod

jobs:
  # Build and Test Job (Runs on all triggers)
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'  # Specify your .NET SDK version

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the solution
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/TestResults/*.trx'

      - name: Upload code coverage report
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: '**/TestResults/**/*.xml'

  # Deploy to QA Job (Automatic deployment on push to Development)
  deploy_qa:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/development'  # Only run when pushing to development branch

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'

      - name: Deploy to QA
        env:
          ENVIRONMENT: 'QA'
        run: |
          echo "Deploying to QA environment"
          # Add commands to deploy to the QA environment here, e.g.,
          # dotnet publish -c Release -o out
          # rsync or SSH commands to deploy to the QA server
          echo "Deployment to QA complete"

  # Deploy to Production Job (Manual deployment from QA to Prod)
  deploy_prod:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.environment == 'prod' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'

      - name: Deploy to Production
        env:
          ENVIRONMENT: 'Prod'
        run: |
          echo "Deploying to Production environment"
          # Add commands to deploy to the Production environment here, e.g.,
          # dotnet publish -c Release -o out
          # rsync or SSH commands to deploy to the Production server
          echo "Deployment to Production complete"
